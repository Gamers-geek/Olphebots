const { Interaction, Client, MessageEmbed, MessageActionRow, MessageButton } = require("discord.js");
const { ticketCategory, partenariatCategory, problemCategory, autreCategory, hautStaff } = require('../config')

module.exports = {
    name: `interactionCreate`,
    /**
     * 
     * @param {Interaction} interaction 
     * @param {Client} client 
     */
    async execute(interaction, client) {
        if (interaction.isButton()) {
            if (interaction.customId === "openTicket") {
                if (interaction.guild.channels.cache.find(c => c.name === `ticket-${interaction.user.id}`)) return interaction.reply({ content: "Vous avez d√©j√† un ticket ouvert !", ephemeral: true });
                interaction.guild.channels.create(`ticket-${interaction.user.id}`, {
                    type: "text",
                    parent: ticketCategory,
                    permissionOverwrites: [
                        {
                            id: interaction.guild.id,
                            deny: ["VIEW_CHANNEL"]
                        },
                        {
                            id: interaction.user.id,
                            allow: ["VIEW_CHANNEL"],
                            deny: ["SEND_MESSAGES"]
                        },
                        {
                            id: client.user.id,
                            allow: ["VIEW_CHANNEL"]
                        },
                        {
                            id: interaction.guild.roles.cache.get(hautStaff),
                            allow: ["VIEW_CHANNEL"]
                        }
                    ]
                }).then(ch => {
                    const embed = new MessageEmbed()
                        .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                        .setTitle(`Ouverture de ticket`)
                        .setDescription(`Bonjour ${interaction.user.username}, afin de r√©pondre de la mani√®re la plus correcte √† votre demande, veuillez s√©lectionner la cat√©gorie √† laquelle elle est associ√©e.\nü§ù Partenariat\n‚ùì Question diverse\n‚ùó Signaler un probl√®me\nüéì Recrutements`)
                        .setFooter({ text: `Support - Olph√©dia`, iconURL: interaction.guild.iconURL({ dynamic: true }) })
                        .setColor("BLUE")
                        .setTimestamp()
                    const buttons = new MessageActionRow()
                        .addComponents(
                            new MessageButton()
                                .setEmoji(`ü§ù`)
                                .setStyle(`SECONDARY`)
                                .setCustomId(`partenariat`)
                        )
                        .addComponents(
                            new MessageButton()
                                .setEmoji(`‚ùì`)
                                .setStyle(`SECONDARY`)
                                .setCustomId(`question`)
                        )
                        .addComponents(
                            new MessageButton()
                                .setEmoji(`‚ùó`)
                                .setStyle(`SECONDARY`)
                                .setCustomId(`probleme`)
                        )
                        .addComponents(
                            new MessageButton()
                                .setEmoji(`üéì`)
                                .setStyle(`SECONDARY`)
                                .setCustomId(`recrutements`)
                        )

                    ch.send({ embeds: [embed], components: [buttons], content: `<@&812813334306881558> <@&772218791429668896>` }).then(msg => {
                        const filter = interact => interact.user.id === interaction.user.id
                        // Cr√©er un collector pour r√©cup√©rer la r√©ponse de l'utilisateur d'une dur√©e de 5 minutes
                        const collector = msg.createMessageComponentCollector({ filter, componentType: 'BUTTON', time: 300000 });
                        collector.on('collect', async i => {
                            if (i.isButton()) {
                                if (i.customId === "partenariat") {
                                    ch.setParent(partenariatCategory)
                                    ch.permissionOverwrites.set([
                                        {
                                            id: interaction.guild.id,
                                            deny: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: client.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.guild.roles.cache.get(hautStaff),
                                            allow: ["VIEW_CHANNEL"]
                                        }
                                    ])
                                    ch.setName(`partenariat-${interaction.user.id}`)
                                    const embed = new MessageEmbed()
                                        .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                                        .setTitle(`Demande de partenariat`)
                                        .setDescription(`Bonjour ${interaction.user},\nAfin de pouvoir r√©pondre le plus vite possible √† votre demande, veuillez nous fournir les informations suivantes :\n**Nom du serveur :**\n**Votre r√¥le sur le serveur :**\n**Le code d'invitation vers votre serveur (sans discord.gg) :**\n**Type de serveur :**\n\nVotre pub sera demand√© si le partenariat est accept√©. En cas de refus, vous en serez inform√©. Nous nous r√©servons le droit de ne pas communiquer les raisons de notre refus.`)
                                        .setColor("BLUE")

                                    const components = new MessageActionRow()
                                        .addComponents(
                                            new MessageButton()
                                                .setEmoji(`üóëÔ∏è`)
                                                .setStyle(`DANGER`)
                                                .setCustomId(`deleteTicket`)
                                        )
                                    msg.edit({ embeds: [embed], components: [components] })
                                    i.reply({ content: `Votre ticket a √©t√© d√©plac√© dans la cat√©gorie appropri√© √† votre demande.`, ephemeral: true })
                                }
                                if (i.customId === "question") {
                                    ch.setParent(autreCategory)
                                    ch.permissionOverwrites.set([
                                        {
                                            id: interaction.guild.id,
                                            deny: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: client.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.guild.roles.cache.get(hautStaff),
                                            allow: ["VIEW_CHANNEL"]
                                        }
                                    ])
                                    ch.setName(`question-${interaction.user.id}`)
                                    const embed = new MessageEmbed()
                                        .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                                        .setTitle(`Question diverse`)
                                        .setDescription(`Bonjour ${interaction.user},\nAfin de pouvoir r√©pondre le plus vite possible √† votre demande, veuillez poser votre question en √©tant clair et pr√©cis.\nNous vous r√©pondrons d√®s que possible.`)
                                        .setColor("BLUE")

                                    const components = new MessageActionRow()
                                        .addComponents(
                                            new MessageButton()
                                                .setEmoji(`üóëÔ∏è`)
                                                .setStyle(`DANGER`)
                                                .setCustomId(`deleteTicket`)
                                        )
                                    msg.edit({ embeds: [embed], components: [components] })
                                    i.reply({ content: `Votre ticket a √©t√© d√©plac√© dans la cat√©gorie appropri√© √† votre demande.`, ephemeral: true })
                                }
                                if (i.customId === "probleme") {
                                    ch.setParent(problemCategory)
                                    ch.permissionOverwrites.set([
                                        {
                                            id: interaction.guild.id,
                                            deny: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: client.user.id,
                                            allow: ["VIEW_CHANNEL"]
                                        },
                                        {
                                            id: interaction.guild.roles.cache.get(hautStaff),
                                            allow: ["VIEW_CHANNEL"]
                                        }
                                    ])
                                    ch.setName(`probleme-${interaction.user.id}`)
                                    const embed = new MessageEmbed()
                                        .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                                        .setTitle(`Signalement de probl√®me`)
                                        .setDescription(`Bonjour ${interaction.user},\nAfin de pouvoir r√©pondre le plus vite possible √† votre demande, veuillez nous fournir les informations suivantes :\n**Probl√®me rencontr√© :**\n**Votre r√¥le sur le serveur :**\n**Personnes ou services affect√©s :**\nNous vous remer√ßions d'avoir pris le temps de nous avoir signal√© votre probl√®me et reviendrons le plus rapidement possible vers vous.`)
                                        .setColor("BLUE")

                                    i.reply({ content: `Votre ticket a √©t√© d√©plac√© dans la cat√©gorie appropri√© √† votre demande.`, ephemeral: true })

                                    const components = new MessageActionRow()
                                        .addComponents(
                                            new MessageButton()
                                                .setEmoji(`üóëÔ∏è`)
                                                .setStyle(`DANGER`)
                                                .setCustomId(`deleteTicket`)
                                        )
                                    msg.edit({ embeds: [embed], components: [components] })
                                }

                            }

                            if (i.customId === "recrutements") {
                                ch.setParent(`900079229910278184`)
                                ch.permissionOverwrites.set([
                                    {
                                        id: interaction.guild.id,
                                        deny: ["VIEW_CHANNEL"]
                                    },
                                    {
                                        id: interaction.user.id,
                                        allow: ["VIEW_CHANNEL"]
                                    },
                                    {
                                        id: client.user.id,
                                        allow: ["VIEW_CHANNEL"]
                                    },
                                    {
                                        id: interaction.guild.roles.cache.get(hautStaff),
                                        allow: ["VIEW_CHANNEL"]
                                    }
                                ])
                                ch.setName(`recrutements-${interaction.user.id}`)
                                const embed = new MessageEmbed()
                                    .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
                                    .setTitle(`Recrutement`)
                                    .setDescription(`Bonjour ${interaction.user},\nAfin de pouvoir r√©pondre le plus vite possible √† votre demande, veuillez nous fournir une candidature contenant au moins les informations suivantes :\n**Votre Pseudo Discord :**\n**Depuis quand vous √™tes pr√©sent sur le serveur :**\n**Avez-vous re√ßu des sanctions sur le serveur ?**\n**Votre exp√©rience :**\n**Le r√¥le que vous souhaitez obtenir :**\n**Votre √¢ge :**\n\nLe staff se r√©serve le droit de refuser toutes candidature s'il le d√©cide, et ce, sans avoir besoin de donner les raisons du refus.`)
                                    .setColor("BLUE")

                                const components = new MessageActionRow()
                                    .addComponents(
                                        new MessageButton()
                                            .setEmoji(`üóëÔ∏è`)
                                            .setStyle(`DANGER`)
                                            .setCustomId(`deleteTicket`)
                                    )
                                msg.edit({ embeds: [embed], components: [components] })
                                i.reply({ content: `Votre ticket a √©t√© d√©plac√© dans la cat√©gorie appropri√© √† votre demande.`, ephemeral: true })
                            }
                        })

                        collector.on('end', async (collected) => {
                            if (collected.size === 0) {
                                ch.send({ content: `Vous n'avez pas r√©pondu dans le d√©lai imparti. Le ticket va √™tre supprim√© dans 10 secondes` })
                                setTimeout(() => {
                                    ch.delete().catch(() => {
                                        console.log(`Impossible de supprimer le ticket. Il a probablement d√©j√† √©t√© supprim√©`)
                                    })
                                }, 10000)
                            }
                        })
                    })
                    interaction.reply({ content: `Votre ticket a √©t√© cr√©√© : ${ch}`, ephemeral: true })



                })
            }
        }
    }
}
